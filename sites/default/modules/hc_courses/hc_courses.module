<?php


/***********************************
 * Drupal Hook Implementations
 **********************************/


/**
 * Implements hook_views_api
 */
function hc_courses_views_api() {

  return array(
    'api' => 3, 
    'path' => drupal_get_path('module', 'hc_courses') . '/includes/views', 
  );
}

/** 
 * Implements hook_menu
 */
function hc_courses_menu() {
  $items = array();
  
  $items['admin/config/courses'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hc_courses_settings_form'),
    'title' => t('General course Settings'),
		'access arguments' => array('administer courses'),
		'file' => 'hc_courses.admin.inc'
  );
  
  return $items;
 
}


/**
 * Implements hook_menu_alter
 */
function hc_courses_menu_alter(&$items) {
  $items['taxonomy/term/%taxonomy_term']['page callback'] = 'hc_courses_taxonomy_term_page';
  $items['taxonomy/term/%taxonomy_term']['title callback'] = 'hc_courses_taxonomy_term_title';
}


/**
 * Implements hook_permission
 */
function hc_courses_permission() {
  return array(
    'administer courses' => array(
      'title' => t('Administer Courses'),
      'description' => t('Perform administration tasks on courses'),
    ),
  );
}


/**
 * Implements hook_theme
 */
function hc_courses_theme() {
  return array(
    'hc_courses_course_domain' => array(
      'variables' => array(
        'tid' => NULL,
      ),
      'template' => 'hc-courses-course-domains',
      'path' => drupal_get_path('module', 'hc_courses') . '/theme', 
    ),
    'hc_courses_course_display_with_products' => array(
      'variables' => array(
        'nid' => NULL,
      ),
      'template' => 'hc-courses-course-display-with-products',
      'path' => drupal_get_path('module', 'hc_courses') . '/theme', 
    ),
    
  );
}


/**
* Implements hook_entity_info_alter().
*/
function hc_courses_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['product_display_with_products'] = array(
    'label' => t('Product display with overview of commerce products'),
    'custom settings' => TRUE,
  );
} 


/**
* Implements hook_node_view().
*/
function hc_courses_preprocess_node(&$vars) {
  if($vars['view_mode'] == 'product_display_with_products') {
    $vars['content'] = array('#markup' => theme('hc_courses_course_display_with_products', array('nid' => $vars['nid'])));
  }
} 

/***********************************
 * Callback & helper functions
 **********************************/


/**
 * Preprocess function for course domain page (e.g. ITIL, ISO…)
 *
 * In this function, we define the variables to use in the tpl.php
 *
 * - full taxonomy term (you never know)
 * - description: term description
 * - individual packages: the individual course packages for this term (view "Courses" - block_1 display)
 * - team packages: the team course packages for this term (view "Courses" - block_2 display)
 */
function template_preprocess_hc_courses_course_domain(&$vars) {
	
	$term = taxonomy_term_load($vars['tid']);

	$term_wrapper = entity_metadata_wrapper('taxonomy_term', $vars['tid']);
  $description = $term_wrapper->description->value();

	$vars['term'] = $term;
	$vars['description'] = array(
	  '#markup' => $description
	);
	$vars['individual_packages'] = array(
	  '#markup' => views_embed_view('courses', 'block_1', $term->tid),
	);
	$vars['team_packages'] = array(
	  '#markup' => views_embed_view('courses', 'block_3', $term->tid),
	);

}


/**
 * Preprocess function for overview courses (e.g. ITIL, ISO…)
 *
 */
function template_preprocess_hc_courses_course_display_with_products(&$vars) {

  // get product display node
  $node_wrapper = entity_metadata_wrapper('node', $vars['nid']);
    
  $field_course_package = $node_wrapper->field_course_package->value();

  $rows = array();
  
  foreach ($field_course_package as $course_package) {
    $course_package_wrapper = entity_metadata_wrapper('commerce_product', $course_package);

    // product location
    $product_location = $course_package_wrapper->field_session_location->value();
    
    // product price: use the right currency and price format!
    $price_values = _hc_regions_currency_format();

    $price_amount = $course_package_wrapper->$price_values['field']->amount->value();
    $price_currency = $price_values['currency'];

    $product_formatted_price = commerce_currency_format($price_amount, $price_currency);
    
    // dates
    $product_session_dates = $course_package_wrapper->field_session_dates->value();
    $product_session_time = strtotime($product_session_dates['value']); // TODO: timezone!!! Date format!!!
    $product_session_final_date = date('d.m.Y H:i', $product_session_time);

    $rows[] = array($product_location, $product_session_final_date, $product_formatted_price);
    
  }
  
  $vars['products'] = theme('table', array('rows' => $rows));

}



/**
 * Menu callback for the taxonomy term page
 */
function hc_courses_taxonomy_term_page($term) {

  $hc_courses_domain_vocabulary = variable_get('hc_courses_domain_vocabulary', 1);
  
  if ($term->vid == $hc_courses_domain_vocabulary) {
		return theme('hc_courses_course_domain', $term->tid);
  }

  return taxonomy_term_page($term);
}

/**
 * Menu callback for the taxonomy term title
 */
function hc_courses_taxonomy_term_title($term) {

  $title = t('Courses for @domain', array('@domain' => $term->name));

  return $title;
}
