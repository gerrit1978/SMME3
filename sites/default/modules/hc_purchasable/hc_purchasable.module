<?php


/**
 * @file
 *
 *
 */

/************************************************************************************
 * Drupal Hook Implementations
 ***********************************************************************************/

/**
 * Implements hook_form_alter
 *
 * We do not want to show the regular form for products (i.e. "product displays") that
 * cannot be purchased.
 */
function hc_purchasable_form_alter(&$form, &$form_state, $form_id) {

  if (strstr($form_id, 'commerce_cart_add_to_cart_form')) {


  	$product_id = isset($form['product_id']['#value']) ? $form['product_id']['#value'] : $form['product_id']['#default_value'];

  	// get nid from product id
  	$product_fields = entity_metadata_wrapper('commerce_product', $product_id);
  	$product_type = $product_fields->type->value();
 
    // only for team package products
    if ($product_fields->type->value() == 'team_package') {
  	  $table = "field_data_field_product";
  	  $field = "field_product_product_id";

  	
    	$result = db_query("SELECT entity_id FROM {$table} WHERE $field=:product_id;", array(':product_id' => $product_id));
    	foreach ($result as $row) {
  			$nid = $row->entity_id;
    	}
  
  		$fields = entity_metadata_wrapper('node', $nid);
  		$can_purchase = $fields->field_can_purchase->value();
  
      if (!$can_purchase) {
      
      	// change the submit button
      	unset($form['submit']);
      	$form['inquiry_submit'] = array(
      	  '#type' => 'button',
      	  '#value' => 'Inquiry',
      	  '#ajax' => array(
  	    	  'callback' => '_hc_purchasable_ajax',
  					'wrapper' => 'contact-block-inquiry',
  					'method' => 'replace',
  					'effect' => 'fade',
  				),
      	);
  
  			$form['contact_block'] = array(
  			  '#type' => 'markup',
  			  '#markup' => '<div id="contact-block-inquiry"></div>',
  			);
  
      }
    } 
  }

}


/**
 * Implements hook_field_display_alter
 */
function hc_purchasable_field_display_alter(&$display, $context) {
}


/**
 * Implements hook_preprocess_node
 */
function hc_purchasable_preprocess_node(&$variables) {
	
	if (isset($variables['nid']) && isset($variables['type']) && $variables['type'] == 'team_course_display') {
		$nid = $variables['nid'];

		$fields = entity_metadata_wrapper('node', $nid);
		$can_purchase = $fields->field_can_purchase->value();
		
		if (!$can_purchase) {
		  unset($variables['content']['product:commerce_price']);
		  unset($variables['content']['product:commerce_price_eur']);
		}
  }
}





/************************************************************************************
 * Internal Helper Functions
 ***********************************************************************************/

/**
 * AJAX callback
 */
function _hc_purchasable_ajax() {

  $output = module_invoke('webform', 'block_view', 'client-block-20');
  return $output['content'];

}